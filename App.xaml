<Application x:Class="GamingTweaksManager.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <materialDesign:BundledTheme BaseTheme="Dark" PrimaryColor="Indigo" SecondaryColor="Cyan" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <!-- Conversores -->
            <BooleanToVisibilityConverter x:Key="BoolToVisConverter"/>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            
            <!-- Fontes Personalizadas -->
            <FontFamily x:Key="TechFont">Segoe UI Variable, Segoe UI, Consolas, Arial</FontFamily>
            <FontFamily x:Key="HeaderFont">Segoe UI Light, Arial</FontFamily>
            <FontFamily x:Key="MonoFont">Cascadia Code, Consolas, Courier New</FontFamily>
            
            <!-- Paleta Profissional Preto e Branco -->
            <SolidColorBrush x:Key="PrimaryDark" Color="#000000"/>
            <SolidColorBrush x:Key="DarkBackground" Color="#000000"/>
            <SolidColorBrush x:Key="DarkBackgroundBrush" Color="#000000"/>
            <SolidColorBrush x:Key="DarkCardBrush" Color="#1A1A1A"/>
            <SolidColorBrush x:Key="AccentPrimary" Color="#FFFFFF"/>
            <SolidColorBrush x:Key="AccentSecondary" Color="#CCCCCC"/>
            <SolidColorBrush x:Key="AccentTertiary" Color="#999999"/>
            <SolidColorBrush x:Key="AccentSuccess" Color="#FFFFFF"/>
            <SolidColorBrush x:Key="AccentWarning" Color="#CCCCCC"/>
            <SolidColorBrush x:Key="AccentError" Color="#666666"/>
            <SolidColorBrush x:Key="CardBackground" Color="#0F0F0F"/>
            <SolidColorBrush x:Key="CardBackgroundHover" Color="#1F1F1F"/>
            <SolidColorBrush x:Key="BorderColor" Color="#333333"/>
            <SolidColorBrush x:Key="BorderColorHover" Color="#555555"/>
            <SolidColorBrush x:Key="TextPrimary" Color="#FFFFFF"/>
            <SolidColorBrush x:Key="TextSecondary" Color="#CCCCCC"/>
            <SolidColorBrush x:Key="TextMuted" Color="#999999"/>
            <SolidColorBrush x:Key="TextDisabled" Color="#666666"/>
            <SolidColorBrush x:Key="AccentBrush" Color="#FFFFFF"/>
            <SolidColorBrush x:Key="AccentGreen" Color="#CCCCCC"/>
            
            <!-- Gradientes Profissionais -->
            <LinearGradientBrush x:Key="HeaderGradient" StartPoint="0,0" EndPoint="1,1">
                <GradientStop Color="#000000" Offset="0"/>
                <GradientStop Color="#1A1A1A" Offset="1"/>
            </LinearGradientBrush>
            
            <LinearGradientBrush x:Key="CardGradient" StartPoint="0,0" EndPoint="1,1">
                <GradientStop Color="#0F0F0F" Offset="0"/>
                <GradientStop Color="#1A1A1A" Offset="1"/>
            </LinearGradientBrush>
            
            <!-- Conversor para inversão de visibilidade -->
            <Style x:Key="InvertedVisibilityStyle" TargetType="FrameworkElement">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding}" Value="True">
                        <Setter Property="Visibility" Value="Collapsed"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding}" Value="False">
                        <Setter Property="Visibility" Value="Visible"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            
            <!-- Conversor invertido -->
            <converters:InvertedBooleanToVisibilityConverter x:Key="InvertedBooleanToVisibilityConverter" xmlns:converters="clr-namespace:GamingTweaksManager.Converters"/>

            <!-- Estilos Modernos -->
            
            <!-- Estilo para Cards Profissionais -->
            <Style x:Key="ModernCard" TargetType="Border">
                <Setter Property="Background" Value="{StaticResource CardGradient}"/>
                <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="CornerRadius" Value="4"/>
                <Setter Property="Padding" Value="24"/>
                <Setter Property="Margin" Value="12"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="BorderBrush" Value="{StaticResource BorderColorHover}"/>
                        <Setter Property="Background" Value="{StaticResource CardBackgroundHover}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            
            <!-- Estilo para Toggle Switch -->
            <Style x:Key="ModernToggle" TargetType="ToggleButton">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Grid>
                                <Border x:Name="Background" 
                                      Width="50" Height="26" 
                                      CornerRadius="13"
                                      Background="{StaticResource TextMuted}"/>
                                <Border x:Name="Thumb" 
                                      Width="20" Height="20" 
                                      CornerRadius="10"
                                      Background="White"
                                      HorizontalAlignment="Left"
                                      Margin="3,3,0,3">
                                    <Border.RenderTransform>
                                        <TranslateTransform x:Name="ThumbTransform"/>
                                    </Border.RenderTransform>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="Background" Property="Background" Value="{StaticResource AccentGreen}"/>
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="ThumbTransform" 
                                                               Storyboard.TargetProperty="X" 
                                                               To="24" Duration="0:0:0.2"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="ThumbTransform" 
                                                               Storyboard.TargetProperty="X" 
                                                               To="0" Duration="0:0:0.2"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <!-- Estilo para Botões Profissionais -->
            <Style x:Key="ModernButton" TargetType="Button">
                <Setter Property="Background" Value="{StaticResource AccentPrimary}"/>
                <Setter Property="Foreground" Value="{StaticResource PrimaryDark}"/>
                <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="20,12"/>
                <Setter Property="FontFamily" Value="{StaticResource TechFont}"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" 
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  BorderThickness="{TemplateBinding BorderThickness}"
                                  CornerRadius="2" 
                                  Padding="{TemplateBinding Padding}">
                                <ContentPresenter HorizontalAlignment="Center" 
                                                VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{StaticResource AccentSecondary}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="{StaticResource AccentTertiary}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <!-- Estilo para Botões Secundários -->
            <Style x:Key="SecondaryButton" TargetType="Button">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="{StaticResource TextPrimary}"/>
                <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="20,12"/>
                <Setter Property="FontFamily" Value="{StaticResource TechFont}"/>
                <Setter Property="FontWeight" Value="Medium"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" 
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  BorderThickness="{TemplateBinding BorderThickness}"
                                  CornerRadius="2" 
                                  Padding="{TemplateBinding Padding}">
                                <ContentPresenter HorizontalAlignment="Center" 
                                                VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{StaticResource CardBackgroundHover}"/>
                                    <Setter Property="BorderBrush" Value="{StaticResource BorderColorHover}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
